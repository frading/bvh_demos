import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { CopNetworkObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/CopNetwork";
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
// cop
import { EnvMapCopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/cop/EnvMap";
import { ImageCopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/cop/Image";
import { ImageEXRCopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/cop/ImageEXR";
// sop
import { AttribCreateSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribCreate";
import { AttribPromoteSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribPromote";
import { BVHSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/BVH";
import { BVHVisualizerSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/BVHVisualizer";
import { BoxSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Box";
import { CameraControlsSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CameraControls";
import { CopySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Copy";
import { EmptyObjectSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/EmptyObject";
import { FileGLTFSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/FileGLTF";
import { HemisphereLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/HemisphereLight";
import { HexagonsSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Hexagons";
import { HierarchySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Hierarchy";
import { MaterialSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material";
import { MaterialsNetworkSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/MaterialsNetwork";
import { MergeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Merge";
import { ObjectPropertiesSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/ObjectProperties";
import { PerspectiveCameraSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PerspectiveCamera";
import { PlaneSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Plane";
import { PolarTransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PolarTransform";
import { QuadPlaneSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/QuadPlane";
import { QuadSmoothSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/QuadSmooth";
import { QuadTriangulateSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/QuadTriangulate";
import { QuadrangulateSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Quadrangulate";
import { SphereSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Sphere";
import { SpotLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/SpotLight";
import { TransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Transform";
import { WFCBuilderSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/WFCBuilder";
import { WFCDebugSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/WFCDebug";
import { WFCRuleConnectionFromSideNameSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/WFCRuleConnectionFromSideName";
import { WFCRuleConnectionToGridBorderSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/WFCRuleConnectionToGridBorder";
import { WFCRuleTileWeightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/WFCRuleTileWeight";
import { WFCSolverSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/WFCSolver";
import { WFCTileEmptyObjectSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/WFCTileEmptyObject";
import { WFCTileErrorObjectSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/WFCTileErrorObject";
import { WFCTilePropertiesSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/WFCTileProperties";
import { WFCTileSideNameSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/WFCTileSideName";
import { WFCTileUnresolvedObjectSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/WFCTileUnresolvedObject";
// event
import { CameraOrbitControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls";
import { FirstPersonControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/FirstPersonControls";
// mat
import { MeshStandardBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandardBuilder";
import { MeshStandardMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandard";
import { SkyMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/Sky";

export class PolySceneWithNodeMap_bvh_demo_fps_controls extends PolyScene {
  node(path: "/COP"): CopNetworkObjNode;
  node(path: "/COP/envMap"): EnvMapCopNode;
  node(path: "/COP/imageEnv"): ImageEXRCopNode;
  node(path: "/COP/image1"): ImageCopNode;
  node(path: "/lights"): GeoObjNode;
  node(path: "/lights/hemisphereLight1"): HemisphereLightSopNode;
  node(path: "/lights/spotLight1"): SpotLightSopNode;
  node(path: "/lights/polarTransform1"): PolarTransformSopNode;
  node(path: "/lights/merge1"): MergeSopNode;
  node(path: "/cameras"): GeoObjNode;
  node(path: "/cameras/perspectiveCamera1"): PerspectiveCameraSopNode;
  node(path: "/cameras/perspectiveCamera_FPS"): PerspectiveCameraSopNode;
  node(path: "/cameras/merge1"): MergeSopNode;
  node(path: "/cameras/cameraControls1"): CameraControlsSopNode;
  node(
    path: "/cameras/cameraControls1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/cameras/cameraControls2"): CameraControlsSopNode;
  node(
    path: "/cameras/cameraControls2/firstPersonControls1"
  ): FirstPersonControlsEventNode;
  node(path: "/level"): GeoObjNode;
  node(path: "/level/fileGLTF1"): FileGLTFSopNode;
  node(path: "/level/hierarchy2"): HierarchySopNode;
  node(path: "/level/material1"): MaterialSopNode;
  node(path: "/level/objectProperties1"): ObjectPropertiesSopNode;
  node(path: "/level/fileGLTF2"): FileGLTFSopNode;
  node(path: "/level/hierarchy3"): HierarchySopNode;
  node(path: "/level/material2"): MaterialSopNode;
  node(path: "/level/objectProperties2"): ObjectPropertiesSopNode;
  node(path: "/level/fileGLTF3"): FileGLTFSopNode;
  node(path: "/level/hierarchy4"): HierarchySopNode;
  node(path: "/level/material3"): MaterialSopNode;
  node(path: "/level/objectProperties3"): ObjectPropertiesSopNode;
  node(path: "/level/fileGLTF4"): FileGLTFSopNode;
  node(path: "/level/hierarchy5"): HierarchySopNode;
  node(path: "/level/material4"): MaterialSopNode;
  node(path: "/level/objectProperties4"): ObjectPropertiesSopNode;
  node(path: "/level/fileGLTF5"): FileGLTFSopNode;
  node(path: "/level/hierarchy6"): HierarchySopNode;
  node(path: "/level/material5"): MaterialSopNode;
  node(path: "/level/objectProperties5"): ObjectPropertiesSopNode;
  node(path: "/level/merge2"): MergeSopNode;
  node(path: "/level/WFCTileSideName1"): WFCTileSideNameSopNode;
  node(path: "/level/WFCTileSideName2"): WFCTileSideNameSopNode;
  node(path: "/level/WFCTileSideName3"): WFCTileSideNameSopNode;
  node(path: "/level/WFCTileSideName4"): WFCTileSideNameSopNode;
  node(path: "/level/WFCTileSideName5"): WFCTileSideNameSopNode;
  node(path: "/level/WFCTileSideName6"): WFCTileSideNameSopNode;
  node(path: "/level/WFCTileSideName7"): WFCTileSideNameSopNode;
  node(path: "/level/WFCTileSideName8"): WFCTileSideNameSopNode;
  node(path: "/level/WFCTileSideName9"): WFCTileSideNameSopNode;
  node(path: "/level/WFCTileSideName10"): WFCTileSideNameSopNode;
  node(path: "/level/WFCTileSideName11"): WFCTileSideNameSopNode;
  node(path: "/level/WFCTileSideName12"): WFCTileSideNameSopNode;
  node(path: "/level/fileGLTF6"): FileGLTFSopNode;
  node(path: "/level/hierarchy7"): HierarchySopNode;
  node(path: "/level/material6"): MaterialSopNode;
  node(path: "/level/objectProperties6"): ObjectPropertiesSopNode;
  node(path: "/level/WFCTileSideName13"): WFCTileSideNameSopNode;
  node(path: "/level/WFCTileSideName14"): WFCTileSideNameSopNode;
  node(path: "/level/WFCTileProperties1"): WFCTilePropertiesSopNode;
  node(path: "/level/attribCreate2"): AttribCreateSopNode;
  node(path: "/level/attribCreate3"): AttribCreateSopNode;
  node(path: "/level/copy2"): CopySopNode;
  node(path: "/level/attribPromote1"): AttribPromoteSopNode;
  node(path: "/level/merge4"): MergeSopNode;
  node(path: "/level/hexagons1"): HexagonsSopNode;
  node(path: "/level/quadrangulate1"): QuadrangulateSopNode;
  node(path: "/level/quadSmooth1"): QuadSmoothSopNode;
  node(path: "/level/quadTriangulate1"): QuadTriangulateSopNode;
  node(path: "/level/WFCSolver1"): WFCSolverSopNode;
  node(path: "/level/merge3"): MergeSopNode;
  node(path: "/level/merge5"): MergeSopNode;
  node(path: "/level/objectProperties7"): ObjectPropertiesSopNode;
  node(path: "/level/quadPlane_10x10"): QuadPlaneSopNode;
  node(path: "/level/quadPlane_2x2"): QuadPlaneSopNode;
  node(path: "/level/WFCRuleTileWeight1"): WFCRuleTileWeightSopNode;
  node(
    path: "/level/WFCRuleConnectionFromSideName1"
  ): WFCRuleConnectionFromSideNameSopNode;
  node(
    path: "/level/WFCRuleConnectionToGridBorder1"
  ): WFCRuleConnectionToGridBorderSopNode;
  node(path: "/level/WFCTileUnresolvedObject1"): WFCTileUnresolvedObjectSopNode;
  node(path: "/level/WFCTileErrorObject1"): WFCTileErrorObjectSopNode;
  node(path: "/level/sphere1"): SphereSopNode;
  node(path: "/level/WFCDebug2"): WFCDebugSopNode;
  node(path: "/level/emptyObject1"): EmptyObjectSopNode;
  node(path: "/level/quadPlane_3x3"): QuadPlaneSopNode;
  node(path: "/level/WFCTileEmptyObject1"): WFCTileEmptyObjectSopNode;
  node(path: "/level/merge1"): MergeSopNode;
  node(path: "/level/emptyObject2"): EmptyObjectSopNode;
  node(path: "/level/WFCDebug3"): WFCDebugSopNode;
  node(path: "/level/plane1"): PlaneSopNode;
  node(path: "/level/transform1"): TransformSopNode;
  node(path: "/level/WFCBuilder1"): WFCBuilderSopNode;
  node(path: "/level/quadPlane_4x3"): QuadPlaneSopNode;
  node(path: "/level/quadPlane_4x4"): QuadPlaneSopNode;
  node(path: "/level/quadPlane_5x5"): QuadPlaneSopNode;
  node(path: "/level/attribCreate1"): AttribCreateSopNode;
  node(path: "/level/attribCreate4"): AttribCreateSopNode;
  node(path: "/level/WFCDebug4"): WFCDebugSopNode;
  node(path: "/level/merge6"): MergeSopNode;
  node(path: "/level/quadPlane_2x1"): QuadPlaneSopNode;
  node(path: "/level/fileGLTF7"): FileGLTFSopNode;
  node(path: "/level/WFCTileErrorObject2"): WFCTileErrorObjectSopNode;
  node(path: "/level/WFCTileUnresolvedObject2"): WFCTileUnresolvedObjectSopNode;
  node(path: "/level/WFCTileEmptyObject2"): WFCTileEmptyObjectSopNode;
  node(path: "/level/merge7"): MergeSopNode;
  node(path: "/level/BVH1"): BVHSopNode;
  node(path: "/level/BVHVisualizer1"): BVHVisualizerSopNode;
  node(path: "/level/transform2"): TransformSopNode;
  node(path: "/level/MAT"): MaterialsNetworkSopNode;
  node(path: "/level/MAT/meshStandard1"): MeshStandardMatNode;
  node(path: "/env"): GeoObjNode;
  node(path: "/env/material1"): MaterialSopNode;
  node(path: "/env/box1"): BoxSopNode;
  node(path: "/env/sphere1"): SphereSopNode;
  node(path: "/env/material2"): MaterialSopNode;
  node(path: "/env/merge1"): MergeSopNode;
  node(path: "/env/transform1"): TransformSopNode;
  node(path: "/env/MAT"): MaterialsNetworkSopNode;
  node(path: "/env/MAT/sky1"): SkyMatNode;
  node(path: "/env/MAT/meshStandardBuilder1"): MeshStandardBuilderMatNode;
  node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_bvh_demo_fps_controls {
  "COP-envMap--useCameraRenderer"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--url"?: ParamValueSerializedTypeMap["string"];
  "COP-imageEnv--reload"?: ParamValueSerializedTypeMap["button"];
  "COP-imageEnv--tcolorSpace"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--colorSpace"?: ParamValueSerializedTypeMap["string"];
  "COP-imageEnv--tmapping"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--mapping"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--twrap"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--wrapS"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--wrapT"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--tminFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--minFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--tmagFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--magFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--tanisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--useRendererMaxAnisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--anisotropy"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--tflipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--flipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--ttransform"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--offset"?: ParamValueSerializedTypeMap["vector2"];
  "COP-imageEnv--offset-offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--offset-offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--repeat"?: ParamValueSerializedTypeMap["vector2"];
  "COP-imageEnv--repeat-repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--repeat-repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--rotation"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--center"?: ParamValueSerializedTypeMap["vector2"];
  "COP-imageEnv--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--center-centery"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--centery"?: ParamValueSerializedTypeMap["float"];
  "COP-imageEnv--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--tformat"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--format"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--ttype"?: ParamValueSerializedTypeMap["boolean"];
  "COP-imageEnv--type"?: ParamValueSerializedTypeMap["integer"];
  "COP-imageEnv--checkFileType"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--url"?: ParamValueSerializedTypeMap["string"];
  "COP-image1--reload"?: ParamValueSerializedTypeMap["button"];
  "COP-image1--tcolorSpace"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--colorSpace"?: ParamValueSerializedTypeMap["string"];
  "COP-image1--tmapping"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--mapping"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--twrap"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--wrapS"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--wrapT"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--tminFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--minFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--tmagFilter"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--magFilter"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--tanisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--useRendererMaxAnisotropy"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--anisotropy"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--tflipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--flipY"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--ttransform"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--offset"?: ParamValueSerializedTypeMap["vector2"];
  "COP-image1--offset-offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--offset-offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--offsetx"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--offsety"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--repeat"?: ParamValueSerializedTypeMap["vector2"];
  "COP-image1--repeat-repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--repeat-repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--repeatx"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--repeaty"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--rotation"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--center"?: ParamValueSerializedTypeMap["vector2"];
  "COP-image1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--centerx"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--centery"?: ParamValueSerializedTypeMap["float"];
  "COP-image1--tadvanced"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--tformat"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--format"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--ttype"?: ParamValueSerializedTypeMap["boolean"];
  "COP-image1--type"?: ParamValueSerializedTypeMap["integer"];
  "COP-image1--checkFileType"?: ParamValueSerializedTypeMap["boolean"];
  "lights--transform"?: ParamValueSerializedTypeMap["folder"];
  "lights--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "lights--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights--t"?: ParamValueSerializedTypeMap["vector3"];
  "lights--t-tx"?: ParamValueSerializedTypeMap["float"];
  "lights--t-ty"?: ParamValueSerializedTypeMap["float"];
  "lights--t-tz"?: ParamValueSerializedTypeMap["float"];
  "lights--tx"?: ParamValueSerializedTypeMap["float"];
  "lights--ty"?: ParamValueSerializedTypeMap["float"];
  "lights--tz"?: ParamValueSerializedTypeMap["float"];
  "lights--r"?: ParamValueSerializedTypeMap["vector3"];
  "lights--r-rx"?: ParamValueSerializedTypeMap["float"];
  "lights--r-ry"?: ParamValueSerializedTypeMap["float"];
  "lights--r-rz"?: ParamValueSerializedTypeMap["float"];
  "lights--rx"?: ParamValueSerializedTypeMap["float"];
  "lights--ry"?: ParamValueSerializedTypeMap["float"];
  "lights--rz"?: ParamValueSerializedTypeMap["float"];
  "lights--s"?: ParamValueSerializedTypeMap["vector3"];
  "lights--s-sx"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sy"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sz"?: ParamValueSerializedTypeMap["float"];
  "lights--sx"?: ParamValueSerializedTypeMap["float"];
  "lights--sy"?: ParamValueSerializedTypeMap["float"];
  "lights--sz"?: ParamValueSerializedTypeMap["float"];
  "lights--scale"?: ParamValueSerializedTypeMap["float"];
  "lights--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "lights--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "lights--display"?: ParamValueSerializedTypeMap["boolean"];
  "lights--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights--CAD"?: ParamValueSerializedTypeMap["folder"];
  "lights--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "lights--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CSG"?: ParamValueSerializedTypeMap["folder"];
  "lights--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "lights--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TET"?: ParamValueSerializedTypeMap["folder"];
  "lights--TetScale"?: ParamValueSerializedTypeMap["float"];
  "lights--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "lights-hemisphereLight1--skyColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--skyColor-skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--groundColor-groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position"?: ParamValueSerializedTypeMap["vector3"];
  "lights-hemisphereLight1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-spotLight1--light"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--color"?: ParamValueSerializedTypeMap["color"];
  "lights-spotLight1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--angle"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--penumbra"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--decay"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--distance"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--helperSize"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--tmap"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--map"?: ParamValueSerializedTypeMap["node_path"];
  "lights-spotLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-spotLight1--shadow"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--shadowAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--shadowUpdateOnNextRender"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--shadowRes"?: ParamValueSerializedTypeMap["vector2"];
  "lights-spotLight1--shadowRes-shadowResx"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowRes-shadowResy"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowResx"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowResy"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowBias"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowNear"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowFar"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--shadowRadius"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--volumetric"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--tvolumetric"?: ParamValueSerializedTypeMap["boolean"];
  "lights-spotLight1--volAttenuation"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--volAnglePower"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--raymarching"?: ParamValueSerializedTypeMap["folder"];
  "lights-spotLight1--raymarchingPenumbra"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--raymarchingShadowBiasAngle"?: ParamValueSerializedTypeMap["float"];
  "lights-spotLight1--raymarchingShadowBiasDistance"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "lights-polarTransform1--center"?: ParamValueSerializedTypeMap["vector3"];
  "lights-polarTransform1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--longitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--latitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--depth"?: ParamValueSerializedTypeMap["float"];
  "lights-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "cameras--transform"?: ParamValueSerializedTypeMap["folder"];
  "cameras--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras--t"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--t-tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--r"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--r-rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--s"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--s-sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--scale"?: ParamValueSerializedTypeMap["float"];
  "cameras--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "cameras--display"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras--CAD"?: ParamValueSerializedTypeMap["folder"];
  "cameras--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CSG"?: ParamValueSerializedTypeMap["folder"];
  "cameras--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "cameras--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TET"?: ParamValueSerializedTypeMap["folder"];
  "cameras--TetScale"?: ParamValueSerializedTypeMap["float"];
  "cameras--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera1--default"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera1--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera1--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera1--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera1--updateTransformFromCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-perspectiveCamera1--PBR"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera1--apertureBlades"?: ParamValueSerializedTypeMap["integer"];
  "cameras-perspectiveCamera1--fStop"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--focusDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--apertureRotation"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--anamorphicRatio"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--default"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera_FPS--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_FPS--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera_FPS--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_FPS--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera_FPS--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera_FPS--updateTransformFromCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-perspectiveCamera_FPS--PBR"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera_FPS--apertureBlades"?: ParamValueSerializedTypeMap["integer"];
  "cameras-perspectiveCamera_FPS--fStop"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--focusDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--apertureRotation"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera_FPS--anamorphicRatio"?: ParamValueSerializedTypeMap["float"];
  "cameras-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1--group"?: ParamValueSerializedTypeMap["string"];
  "cameras-cameraControls1--node"?: ParamValueSerializedTypeMap["node_path"];
  "cameras-cameraControls1-cameraOrbitControls1--main"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--limits"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--controls"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--leftMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--middleMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--rightMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--oneFingerTouch"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--twoFingersTouch"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--misc"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2--group"?: ParamValueSerializedTypeMap["string"];
  "cameras-cameraControls2--node"?: ParamValueSerializedTypeMap["node_path"];
  "cameras-cameraControls2-firstPersonControls1--main"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls2-firstPersonControls1--colliderObject"?: ParamValueSerializedTypeMap["node_path"];
  "cameras-cameraControls2-firstPersonControls1--lock"?: ParamValueSerializedTypeMap["button"];
  "cameras-cameraControls2-firstPersonControls1--unlock"?: ParamValueSerializedTypeMap["button"];
  "cameras-cameraControls2-firstPersonControls1--capsuleRadius"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--capsuleHeight"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--physics"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls2-firstPersonControls1--physicsSteps"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls2-firstPersonControls1--gravity"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls2-firstPersonControls1--gravity-gravityx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--gravity-gravityy"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--gravity-gravityz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--gravityx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--gravityy"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--gravityz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--translateSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--jumpAllowed"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls2-firstPersonControls1--jumpStrength"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--runAllowed"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls2-firstPersonControls1--runSpeedMult"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--updateCollider"?: ParamValueSerializedTypeMap["button"];
  "cameras-cameraControls2-firstPersonControls1--init"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls2-firstPersonControls1--startPosition"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls2-firstPersonControls1--startPosition-startPositionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--startPosition-startPositiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--startPosition-startPositionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--startPositionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--startPositiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--startPositionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--startRotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls2-firstPersonControls1--startRotation-startRotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--startRotation-startRotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--startRotation-startRotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--startRotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--startRotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--startRotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--reset"?: ParamValueSerializedTypeMap["button"];
  "cameras-cameraControls2-firstPersonControls1--minPolarAngle"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--maxPolarAngle"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls2-firstPersonControls1--html"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls2-firstPersonControls1--customLockCursorElement"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls2-firstPersonControls1--lockCursorElementSelector"?: ParamValueSerializedTypeMap["string"];
  "level--transform"?: ParamValueSerializedTypeMap["folder"];
  "level--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "level--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "level--t"?: ParamValueSerializedTypeMap["vector3"];
  "level--t-tx"?: ParamValueSerializedTypeMap["float"];
  "level--t-ty"?: ParamValueSerializedTypeMap["float"];
  "level--t-tz"?: ParamValueSerializedTypeMap["float"];
  "level--tx"?: ParamValueSerializedTypeMap["float"];
  "level--ty"?: ParamValueSerializedTypeMap["float"];
  "level--tz"?: ParamValueSerializedTypeMap["float"];
  "level--r"?: ParamValueSerializedTypeMap["vector3"];
  "level--r-rx"?: ParamValueSerializedTypeMap["float"];
  "level--r-ry"?: ParamValueSerializedTypeMap["float"];
  "level--r-rz"?: ParamValueSerializedTypeMap["float"];
  "level--rx"?: ParamValueSerializedTypeMap["float"];
  "level--ry"?: ParamValueSerializedTypeMap["float"];
  "level--rz"?: ParamValueSerializedTypeMap["float"];
  "level--s"?: ParamValueSerializedTypeMap["vector3"];
  "level--s-sx"?: ParamValueSerializedTypeMap["float"];
  "level--s-sy"?: ParamValueSerializedTypeMap["float"];
  "level--s-sz"?: ParamValueSerializedTypeMap["float"];
  "level--sx"?: ParamValueSerializedTypeMap["float"];
  "level--sy"?: ParamValueSerializedTypeMap["float"];
  "level--sz"?: ParamValueSerializedTypeMap["float"];
  "level--scale"?: ParamValueSerializedTypeMap["float"];
  "level--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "level--display"?: ParamValueSerializedTypeMap["boolean"];
  "level--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "level--CAD"?: ParamValueSerializedTypeMap["folder"];
  "level--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "level--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "level--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "level--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "level--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "level--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "level--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "level--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "level--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "level--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "level--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "level--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "level--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "level--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "level--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "level--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "level--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "level--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "level--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "level--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "level--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "level--CSG"?: ParamValueSerializedTypeMap["folder"];
  "level--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "level--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "level--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "level--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "level--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "level--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "level--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "level--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "level--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "level--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "level--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "level--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "level--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "level--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "level--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "level--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "level--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "level--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "level--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "level--TET"?: ParamValueSerializedTypeMap["folder"];
  "level--TetScale"?: ParamValueSerializedTypeMap["float"];
  "level--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "level--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "level--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "level--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "level--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "level--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "level--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF1--url"?: ParamValueSerializedTypeMap["string"];
  "level-fileGLTF1--draco"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF1--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF1--reload"?: ParamValueSerializedTypeMap["button"];
  "level-hierarchy2--mode"?: ParamValueSerializedTypeMap["integer"];
  "level-hierarchy2--levels"?: ParamValueSerializedTypeMap["integer"];
  "level-hierarchy2--objectMask"?: ParamValueSerializedTypeMap["string"];
  "level-hierarchy2--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "level-material1--group"?: ParamValueSerializedTypeMap["string"];
  "level-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "level-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "level-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "level-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "level-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "level-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "level-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties1--group"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties1--tname"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties1--name"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties1--trenderOrder"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties1--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "level-objectProperties1--tfrustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties1--frustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties1--tmatrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties1--tvisible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties1--visible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties1--tcastShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties1--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties1--treceiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties1--receiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF2--url"?: ParamValueSerializedTypeMap["string"];
  "level-fileGLTF2--draco"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF2--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF2--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF2--reload"?: ParamValueSerializedTypeMap["button"];
  "level-hierarchy3--mode"?: ParamValueSerializedTypeMap["integer"];
  "level-hierarchy3--levels"?: ParamValueSerializedTypeMap["integer"];
  "level-hierarchy3--objectMask"?: ParamValueSerializedTypeMap["string"];
  "level-hierarchy3--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "level-material2--group"?: ParamValueSerializedTypeMap["string"];
  "level-material2--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "level-material2--material"?: ParamValueSerializedTypeMap["node_path"];
  "level-material2--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "level-material2--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "level-material2--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "level-material2--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "level-material2--texDest0"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties2--group"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties2--tname"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties2--name"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties2--trenderOrder"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties2--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "level-objectProperties2--tfrustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties2--frustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties2--tmatrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties2--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties2--tvisible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties2--visible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties2--tcastShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties2--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties2--treceiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties2--receiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF3--url"?: ParamValueSerializedTypeMap["string"];
  "level-fileGLTF3--draco"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF3--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF3--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF3--reload"?: ParamValueSerializedTypeMap["button"];
  "level-hierarchy4--mode"?: ParamValueSerializedTypeMap["integer"];
  "level-hierarchy4--levels"?: ParamValueSerializedTypeMap["integer"];
  "level-hierarchy4--objectMask"?: ParamValueSerializedTypeMap["string"];
  "level-hierarchy4--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "level-material3--group"?: ParamValueSerializedTypeMap["string"];
  "level-material3--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "level-material3--material"?: ParamValueSerializedTypeMap["node_path"];
  "level-material3--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "level-material3--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "level-material3--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "level-material3--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "level-material3--texDest0"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties3--group"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties3--tname"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties3--name"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties3--trenderOrder"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties3--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "level-objectProperties3--tfrustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties3--frustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties3--tmatrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties3--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties3--tvisible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties3--visible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties3--tcastShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties3--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties3--treceiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties3--receiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF4--url"?: ParamValueSerializedTypeMap["string"];
  "level-fileGLTF4--draco"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF4--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF4--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF4--reload"?: ParamValueSerializedTypeMap["button"];
  "level-hierarchy5--mode"?: ParamValueSerializedTypeMap["integer"];
  "level-hierarchy5--levels"?: ParamValueSerializedTypeMap["integer"];
  "level-hierarchy5--objectMask"?: ParamValueSerializedTypeMap["string"];
  "level-hierarchy5--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "level-material4--group"?: ParamValueSerializedTypeMap["string"];
  "level-material4--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "level-material4--material"?: ParamValueSerializedTypeMap["node_path"];
  "level-material4--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "level-material4--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "level-material4--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "level-material4--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "level-material4--texDest0"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties4--group"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties4--tname"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties4--name"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties4--trenderOrder"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties4--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "level-objectProperties4--tfrustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties4--frustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties4--tmatrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties4--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties4--tvisible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties4--visible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties4--tcastShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties4--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties4--treceiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties4--receiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF5--url"?: ParamValueSerializedTypeMap["string"];
  "level-fileGLTF5--draco"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF5--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF5--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF5--reload"?: ParamValueSerializedTypeMap["button"];
  "level-hierarchy6--mode"?: ParamValueSerializedTypeMap["integer"];
  "level-hierarchy6--levels"?: ParamValueSerializedTypeMap["integer"];
  "level-hierarchy6--objectMask"?: ParamValueSerializedTypeMap["string"];
  "level-hierarchy6--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "level-material5--group"?: ParamValueSerializedTypeMap["string"];
  "level-material5--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "level-material5--material"?: ParamValueSerializedTypeMap["node_path"];
  "level-material5--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "level-material5--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "level-material5--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "level-material5--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "level-material5--texDest0"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties5--group"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties5--tname"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties5--name"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties5--trenderOrder"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties5--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "level-objectProperties5--tfrustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties5--frustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties5--tmatrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties5--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties5--tvisible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties5--visible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties5--tcastShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties5--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties5--treceiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties5--receiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge2--compact"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge2--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge2--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "level-WFCTileSideName1--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName1--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName1--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName1--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName1--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName1--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName1--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName1--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName1--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName1--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName1--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName1--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName1--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName1--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName1--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName1--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName2--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName2--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName2--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName2--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName2--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName2--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName2--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName2--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName2--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName2--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName2--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName2--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName2--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName2--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName2--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName2--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName3--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName3--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName3--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName3--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName3--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName3--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName3--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName3--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName3--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName3--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName3--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName3--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName3--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName3--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName3--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName3--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName4--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName4--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName4--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName4--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName4--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName4--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName4--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName4--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName4--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName4--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName4--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName4--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName4--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName4--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName4--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName4--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName5--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName5--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName5--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName5--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName5--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName5--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName5--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName5--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName5--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName5--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName5--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName5--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName5--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName5--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName5--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName5--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName6--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName6--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName6--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName6--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName6--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName6--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName6--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName6--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName6--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName6--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName6--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName6--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName6--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName6--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName6--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName6--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName7--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName7--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName7--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName7--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName7--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName7--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName7--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName7--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName7--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName7--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName7--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName7--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName7--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName7--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName7--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName7--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName8--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName8--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName8--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName8--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName8--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName8--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName8--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName8--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName8--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName8--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName8--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName8--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName8--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName8--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName8--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName8--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName9--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName9--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName9--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName9--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName9--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName9--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName9--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName9--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName9--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName9--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName9--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName9--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName9--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName9--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName9--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName9--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName10--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName10--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName10--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName10--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName10--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName10--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName10--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName10--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName10--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName10--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName10--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName10--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName10--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName10--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName10--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName10--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName11--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName11--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName11--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName11--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName11--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName11--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName11--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName11--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName11--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName11--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName11--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName11--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName11--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName11--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName11--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName11--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName12--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName12--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName12--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName12--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName12--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName12--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName12--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName12--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName12--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName12--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName12--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName12--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName12--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName12--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName12--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName12--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF6--url"?: ParamValueSerializedTypeMap["string"];
  "level-fileGLTF6--draco"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF6--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF6--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF6--reload"?: ParamValueSerializedTypeMap["button"];
  "level-hierarchy7--mode"?: ParamValueSerializedTypeMap["integer"];
  "level-hierarchy7--levels"?: ParamValueSerializedTypeMap["integer"];
  "level-hierarchy7--objectMask"?: ParamValueSerializedTypeMap["string"];
  "level-hierarchy7--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "level-material6--group"?: ParamValueSerializedTypeMap["string"];
  "level-material6--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "level-material6--material"?: ParamValueSerializedTypeMap["node_path"];
  "level-material6--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "level-material6--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "level-material6--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "level-material6--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "level-material6--texDest0"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties6--group"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties6--tname"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties6--name"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties6--trenderOrder"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties6--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "level-objectProperties6--tfrustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties6--frustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties6--tmatrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties6--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties6--tvisible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties6--visible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties6--tcastShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties6--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties6--treceiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties6--receiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName13--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName13--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName13--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName13--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName13--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName13--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName13--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName13--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName13--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName13--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName13--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName13--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName13--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName13--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName13--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName13--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName14--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName14--sameNameForSelectedSides"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName14--south"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName14--southName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName14--north"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName14--northName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName14--west"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName14--westName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName14--east"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName14--eastName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName14--bottom"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName14--bottomName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName14--top"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileSideName14--topName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName14--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileSideName14--highlight"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileProperties1--group"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileProperties1--addId"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileProperties1--id"?: ParamValueSerializedTypeMap["string"];
  "level-WFCTileProperties1--addName"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCTileProperties1--allowedRotationY"?: ParamValueSerializedTypeMap["boolean"];
  "level-attribCreate2--group"?: ParamValueSerializedTypeMap["string"];
  "level-attribCreate2--class"?: ParamValueSerializedTypeMap["integer"];
  "level-attribCreate2--type"?: ParamValueSerializedTypeMap["integer"];
  "level-attribCreate2--name"?: ParamValueSerializedTypeMap["string"];
  "level-attribCreate2--size"?: ParamValueSerializedTypeMap["integer"];
  "level-attribCreate2--value1"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value2"?: ParamValueSerializedTypeMap["vector2"];
  "level-attribCreate2--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value2x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value2y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value3"?: ParamValueSerializedTypeMap["vector3"];
  "level-attribCreate2--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value3x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value3y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value3z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value4"?: ParamValueSerializedTypeMap["vector4"];
  "level-attribCreate2--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value4x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value4y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value4z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--value4w"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate2--string"?: ParamValueSerializedTypeMap["string"];
  "level-attribCreate3--group"?: ParamValueSerializedTypeMap["string"];
  "level-attribCreate3--class"?: ParamValueSerializedTypeMap["integer"];
  "level-attribCreate3--type"?: ParamValueSerializedTypeMap["integer"];
  "level-attribCreate3--name"?: ParamValueSerializedTypeMap["string"];
  "level-attribCreate3--size"?: ParamValueSerializedTypeMap["integer"];
  "level-attribCreate3--value1"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value2"?: ParamValueSerializedTypeMap["vector2"];
  "level-attribCreate3--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value2x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value2y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value3"?: ParamValueSerializedTypeMap["vector3"];
  "level-attribCreate3--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value3x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value3y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value3z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value4"?: ParamValueSerializedTypeMap["vector4"];
  "level-attribCreate3--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value4x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value4y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value4z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--value4w"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate3--string"?: ParamValueSerializedTypeMap["string"];
  "level-copy2--srcGroup"?: ParamValueSerializedTypeMap["string"];
  "level-copy2--templateGroup"?: ParamValueSerializedTypeMap["string"];
  "level-copy2--count"?: ParamValueSerializedTypeMap["integer"];
  "level-copy2--t"?: ParamValueSerializedTypeMap["vector3"];
  "level-copy2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--tx"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--ty"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--tz"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--r"?: ParamValueSerializedTypeMap["vector3"];
  "level-copy2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--rx"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--ry"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--rz"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--s"?: ParamValueSerializedTypeMap["vector3"];
  "level-copy2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--sx"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--sy"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--sz"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--scale"?: ParamValueSerializedTypeMap["float"];
  "level-copy2--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "level-copy2--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "level-copy2--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "level-copy2--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "level-copy2--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "level-copy2--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "level-attribPromote1--group"?: ParamValueSerializedTypeMap["string"];
  "level-attribPromote1--classFrom"?: ParamValueSerializedTypeMap["integer"];
  "level-attribPromote1--classTo"?: ParamValueSerializedTypeMap["integer"];
  "level-attribPromote1--mode"?: ParamValueSerializedTypeMap["integer"];
  "level-attribPromote1--name"?: ParamValueSerializedTypeMap["string"];
  "level-merge4--compact"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge4--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge4--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "level-hexagons1--size"?: ParamValueSerializedTypeMap["vector2"];
  "level-hexagons1--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "level-hexagons1--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "level-hexagons1--sizex"?: ParamValueSerializedTypeMap["float"];
  "level-hexagons1--sizey"?: ParamValueSerializedTypeMap["float"];
  "level-hexagons1--hexagonRadius"?: ParamValueSerializedTypeMap["float"];
  "level-hexagons1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "level-hexagons1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "level-hexagons1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "level-hexagons1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "level-hexagons1--directionx"?: ParamValueSerializedTypeMap["float"];
  "level-hexagons1--directiony"?: ParamValueSerializedTypeMap["float"];
  "level-hexagons1--directionz"?: ParamValueSerializedTypeMap["float"];
  "level-hexagons1--pointsOnly"?: ParamValueSerializedTypeMap["boolean"];
  "level-quadrangulate1--regular"?: ParamValueSerializedTypeMap["boolean"];
  "level-quadrangulate1--seed"?: ParamValueSerializedTypeMap["integer"];
  "level-quadSmooth1--mode"?: ParamValueSerializedTypeMap["integer"];
  "level-quadSmooth1--iterations"?: ParamValueSerializedTypeMap["integer"];
  "level-quadSmooth1--strength"?: ParamValueSerializedTypeMap["float"];
  "level-quadTriangulate1--triangles"?: ParamValueSerializedTypeMap["boolean"];
  "level-quadTriangulate1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCSolver1--stepsCount"?: ParamValueSerializedTypeMap["integer"];
  "level-WFCSolver1--maxCount"?: ParamValueSerializedTypeMap["integer"];
  "level-WFCSolver1--quadSeed"?: ParamValueSerializedTypeMap["integer"];
  "level-WFCSolver1--configSeed"?: ParamValueSerializedTypeMap["integer"];
  "level-merge3--compact"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge3--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge3--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "level-merge5--compact"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge5--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge5--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "level-objectProperties7--group"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties7--tname"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties7--name"?: ParamValueSerializedTypeMap["string"];
  "level-objectProperties7--trenderOrder"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties7--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "level-objectProperties7--tfrustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties7--frustumCulled"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties7--tmatrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties7--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties7--tvisible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties7--visible"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties7--tcastShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties7--castShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties7--treceiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-objectProperties7--receiveShadow"?: ParamValueSerializedTypeMap["boolean"];
  "level-quadPlane_10x10--size"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_10x10--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "level-quadPlane_10x10--stepSize"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--segments"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_10x10--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--direction"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_10x10--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--center"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_10x10--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--center-centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_10x10--centerz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--size"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_2x2--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "level-quadPlane_2x2--stepSize"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--segments"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_2x2--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--direction"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_2x2--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--center"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_2x2--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--center-centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x2--centerz"?: ParamValueSerializedTypeMap["float"];
  "level-WFCRuleTileWeight1--tileId"?: ParamValueSerializedTypeMap["string"];
  "level-WFCRuleTileWeight1--weight"?: ParamValueSerializedTypeMap["float"];
  "level-WFCRuleConnectionFromSideName1--srcTileId"?: ParamValueSerializedTypeMap["string"];
  "level-WFCRuleConnectionFromSideName1--destTileId"?: ParamValueSerializedTypeMap["string"];
  "level-WFCRuleConnectionFromSideName1--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-WFCRuleConnectionToGridBorder1--tileId"?: ParamValueSerializedTypeMap["string"];
  "level-WFCRuleConnectionToGridBorder1--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-sphere1--type"?: ParamValueSerializedTypeMap["integer"];
  "level-sphere1--radius"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "level-sphere1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--open"?: ParamValueSerializedTypeMap["boolean"];
  "level-sphere1--phiStart"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--phiLength"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--detail"?: ParamValueSerializedTypeMap["integer"];
  "level-sphere1--center"?: ParamValueSerializedTypeMap["vector3"];
  "level-sphere1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--centerx"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--centery"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--centerz"?: ParamValueSerializedTypeMap["float"];
  "level-sphere1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "level-WFCDebug2--srcTileId"?: ParamValueSerializedTypeMap["string"];
  "level-WFCDebug2--destTileId"?: ParamValueSerializedTypeMap["string"];
  "level-WFCDebug2--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-emptyObject1--type"?: ParamValueSerializedTypeMap["string"];
  "level-quadPlane_3x3--size"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_3x3--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "level-quadPlane_3x3--stepSize"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--segments"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_3x3--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--direction"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_3x3--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--center"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_3x3--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--center-centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_3x3--centerz"?: ParamValueSerializedTypeMap["float"];
  "level-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "level-emptyObject2--type"?: ParamValueSerializedTypeMap["string"];
  "level-WFCDebug3--srcTileId"?: ParamValueSerializedTypeMap["string"];
  "level-WFCDebug3--destTileId"?: ParamValueSerializedTypeMap["string"];
  "level-WFCDebug3--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-plane1--size"?: ParamValueSerializedTypeMap["vector2"];
  "level-plane1--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--sizex"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--sizey"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "level-plane1--stepSize"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--segments"?: ParamValueSerializedTypeMap["vector2"];
  "level-plane1--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "level-plane1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--directionx"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--directiony"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--directionz"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--center"?: ParamValueSerializedTypeMap["vector3"];
  "level-plane1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--centerx"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--centery"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--centerz"?: ParamValueSerializedTypeMap["float"];
  "level-plane1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "level-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "level-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "level-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "level-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "level-transform1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "level-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "level-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "level-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "level-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "level-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "level-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "level-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "level-WFCBuilder1--tileHeight"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--size"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_4x3--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "level-quadPlane_4x3--stepSize"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--segments"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_4x3--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--direction"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_4x3--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--center"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_4x3--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--center-centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x3--centerz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--size"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_4x4--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "level-quadPlane_4x4--stepSize"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--segments"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_4x4--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--direction"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_4x4--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--center"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_4x4--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--center-centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_4x4--centerz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--size"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_5x5--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "level-quadPlane_5x5--stepSize"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--segments"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_5x5--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--direction"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_5x5--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--center"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_5x5--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--center-centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_5x5--centerz"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--group"?: ParamValueSerializedTypeMap["string"];
  "level-attribCreate1--class"?: ParamValueSerializedTypeMap["integer"];
  "level-attribCreate1--type"?: ParamValueSerializedTypeMap["integer"];
  "level-attribCreate1--name"?: ParamValueSerializedTypeMap["string"];
  "level-attribCreate1--size"?: ParamValueSerializedTypeMap["integer"];
  "level-attribCreate1--value1"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value2"?: ParamValueSerializedTypeMap["vector2"];
  "level-attribCreate1--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value2x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value2y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value3"?: ParamValueSerializedTypeMap["vector3"];
  "level-attribCreate1--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value3x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value3y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value3z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value4"?: ParamValueSerializedTypeMap["vector4"];
  "level-attribCreate1--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value4x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value4y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value4z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--value4w"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate1--string"?: ParamValueSerializedTypeMap["string"];
  "level-attribCreate4--group"?: ParamValueSerializedTypeMap["string"];
  "level-attribCreate4--class"?: ParamValueSerializedTypeMap["integer"];
  "level-attribCreate4--type"?: ParamValueSerializedTypeMap["integer"];
  "level-attribCreate4--name"?: ParamValueSerializedTypeMap["string"];
  "level-attribCreate4--size"?: ParamValueSerializedTypeMap["integer"];
  "level-attribCreate4--value1"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value2"?: ParamValueSerializedTypeMap["vector2"];
  "level-attribCreate4--value2-value2x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value2-value2y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value2x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value2y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value3"?: ParamValueSerializedTypeMap["vector3"];
  "level-attribCreate4--value3-value3x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value3-value3y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value3-value3z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value3x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value3y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value3z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value4"?: ParamValueSerializedTypeMap["vector4"];
  "level-attribCreate4--value4-value4x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value4-value4y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value4-value4z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value4-value4w"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value4x"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value4y"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value4z"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--value4w"?: ParamValueSerializedTypeMap["float"];
  "level-attribCreate4--string"?: ParamValueSerializedTypeMap["string"];
  "level-WFCDebug4--srcTileId"?: ParamValueSerializedTypeMap["string"];
  "level-WFCDebug4--destTileId"?: ParamValueSerializedTypeMap["string"];
  "level-WFCDebug4--sideName"?: ParamValueSerializedTypeMap["string"];
  "level-merge6--compact"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge6--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge6--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "level-quadPlane_2x1--size"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_2x1--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--sizex"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--sizey"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "level-quadPlane_2x1--stepSize"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--segments"?: ParamValueSerializedTypeMap["vector2"];
  "level-quadPlane_2x1--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_2x1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--directionx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--directiony"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--directionz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--center"?: ParamValueSerializedTypeMap["vector3"];
  "level-quadPlane_2x1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--centerx"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--centery"?: ParamValueSerializedTypeMap["float"];
  "level-quadPlane_2x1--centerz"?: ParamValueSerializedTypeMap["float"];
  "level-fileGLTF7--url"?: ParamValueSerializedTypeMap["string"];
  "level-fileGLTF7--draco"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF7--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF7--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "level-fileGLTF7--reload"?: ParamValueSerializedTypeMap["button"];
  "level-merge7--compact"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge7--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "level-merge7--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "level-BVH1--strategy"?: ParamValueSerializedTypeMap["integer"];
  "level-BVH1--maxDepth"?: ParamValueSerializedTypeMap["integer"];
  "level-BVH1--maxLeafTris"?: ParamValueSerializedTypeMap["integer"];
  "level-BVH1--verbose"?: ParamValueSerializedTypeMap["boolean"];
  "level-BVH1--keepOnlyPosition"?: ParamValueSerializedTypeMap["boolean"];
  "level-BVHVisualizer1--depth"?: ParamValueSerializedTypeMap["integer"];
  "level-BVHVisualizer1--opacity"?: ParamValueSerializedTypeMap["float"];
  "level-BVHVisualizer1--displayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "level-BVHVisualizer1--displayParents"?: ParamValueSerializedTypeMap["boolean"];
  "level-transform2--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "level-transform2--group"?: ParamValueSerializedTypeMap["string"];
  "level-transform2--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "level-transform2--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "level-transform2--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "level-transform2--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "level-transform2--t"?: ParamValueSerializedTypeMap["vector3"];
  "level-transform2--t-tx"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--t-ty"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--t-tz"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--tx"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--ty"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--tz"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--r"?: ParamValueSerializedTypeMap["vector3"];
  "level-transform2--r-rx"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--r-ry"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--r-rz"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--rx"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--ry"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--rz"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--s"?: ParamValueSerializedTypeMap["vector3"];
  "level-transform2--s-sx"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--s-sy"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--s-sz"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--sx"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--sy"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--sz"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--scale"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "level-transform2--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--pivotx"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--pivoty"?: ParamValueSerializedTypeMap["float"];
  "level-transform2--pivotz"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--default"?: ParamValueSerializedTypeMap["folder"];
  "level-MAT-meshStandard1--color"?: ParamValueSerializedTypeMap["color"];
  "level-MAT-meshStandard1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--colorr"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--colorg"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--colorb"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--opacity"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--textures"?: ParamValueSerializedTypeMap["folder"];
  "level-MAT-meshStandard1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--map"?: ParamValueSerializedTypeMap["node_path"];
  "level-MAT-meshStandard1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "level-MAT-meshStandard1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "level-MAT-meshStandard1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "level-MAT-meshStandard1--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "level-MAT-meshStandard1--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--emissive"?: ParamValueSerializedTypeMap["color"];
  "level-MAT-meshStandard1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "level-MAT-meshStandard1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "level-MAT-meshStandard1--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "level-MAT-meshStandard1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "level-MAT-meshStandard1--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "level-MAT-meshStandard1--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "level-MAT-meshStandard1--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "level-MAT-meshStandard1--metalness"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "level-MAT-meshStandard1--roughness"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "level-MAT-meshStandard1--flatShading"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--front"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--blending"?: ParamValueSerializedTypeMap["integer"];
  "level-MAT-meshStandard1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "level-MAT-meshStandard1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "level-MAT-meshStandard1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "level-MAT-meshStandard1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "level-MAT-meshStandard1--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "level-MAT-meshStandard1--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "level-MAT-meshStandard1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "env--transform"?: ParamValueSerializedTypeMap["folder"];
  "env--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "env--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "env--t"?: ParamValueSerializedTypeMap["vector3"];
  "env--t-tx"?: ParamValueSerializedTypeMap["float"];
  "env--t-ty"?: ParamValueSerializedTypeMap["float"];
  "env--t-tz"?: ParamValueSerializedTypeMap["float"];
  "env--tx"?: ParamValueSerializedTypeMap["float"];
  "env--ty"?: ParamValueSerializedTypeMap["float"];
  "env--tz"?: ParamValueSerializedTypeMap["float"];
  "env--r"?: ParamValueSerializedTypeMap["vector3"];
  "env--r-rx"?: ParamValueSerializedTypeMap["float"];
  "env--r-ry"?: ParamValueSerializedTypeMap["float"];
  "env--r-rz"?: ParamValueSerializedTypeMap["float"];
  "env--rx"?: ParamValueSerializedTypeMap["float"];
  "env--ry"?: ParamValueSerializedTypeMap["float"];
  "env--rz"?: ParamValueSerializedTypeMap["float"];
  "env--s"?: ParamValueSerializedTypeMap["vector3"];
  "env--s-sx"?: ParamValueSerializedTypeMap["float"];
  "env--s-sy"?: ParamValueSerializedTypeMap["float"];
  "env--s-sz"?: ParamValueSerializedTypeMap["float"];
  "env--sx"?: ParamValueSerializedTypeMap["float"];
  "env--sy"?: ParamValueSerializedTypeMap["float"];
  "env--sz"?: ParamValueSerializedTypeMap["float"];
  "env--scale"?: ParamValueSerializedTypeMap["float"];
  "env--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "env--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "env--display"?: ParamValueSerializedTypeMap["boolean"];
  "env--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "env--CAD"?: ParamValueSerializedTypeMap["folder"];
  "env--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "env--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "env--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "env--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "env--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "env--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "env--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "env--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "env--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "env--CSG"?: ParamValueSerializedTypeMap["folder"];
  "env--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "env--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "env--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "env--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "env--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "env--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "env--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "env--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "env--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "env--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "env--TET"?: ParamValueSerializedTypeMap["folder"];
  "env--TetScale"?: ParamValueSerializedTypeMap["float"];
  "env--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "env--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "env--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "env--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "env--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "env--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "env--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "env-material1--group"?: ParamValueSerializedTypeMap["string"];
  "env-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "env-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "env-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "env-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "env-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "env-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "env-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "env-box1--size"?: ParamValueSerializedTypeMap["float"];
  "env-box1--sizes"?: ParamValueSerializedTypeMap["vector3"];
  "env-box1--sizes-sizesx"?: ParamValueSerializedTypeMap["float"];
  "env-box1--sizes-sizesy"?: ParamValueSerializedTypeMap["float"];
  "env-box1--sizes-sizesz"?: ParamValueSerializedTypeMap["float"];
  "env-box1--sizesx"?: ParamValueSerializedTypeMap["float"];
  "env-box1--sizesy"?: ParamValueSerializedTypeMap["float"];
  "env-box1--sizesz"?: ParamValueSerializedTypeMap["float"];
  "env-box1--divisions"?: ParamValueSerializedTypeMap["vector3"];
  "env-box1--divisions-divisionsx"?: ParamValueSerializedTypeMap["float"];
  "env-box1--divisions-divisionsy"?: ParamValueSerializedTypeMap["float"];
  "env-box1--divisions-divisionsz"?: ParamValueSerializedTypeMap["float"];
  "env-box1--divisionsx"?: ParamValueSerializedTypeMap["float"];
  "env-box1--divisionsy"?: ParamValueSerializedTypeMap["float"];
  "env-box1--divisionsz"?: ParamValueSerializedTypeMap["float"];
  "env-box1--center"?: ParamValueSerializedTypeMap["vector3"];
  "env-box1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "env-box1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "env-box1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "env-box1--centerx"?: ParamValueSerializedTypeMap["float"];
  "env-box1--centery"?: ParamValueSerializedTypeMap["float"];
  "env-box1--centerz"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--type"?: ParamValueSerializedTypeMap["integer"];
  "env-sphere1--radius"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "env-sphere1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--open"?: ParamValueSerializedTypeMap["boolean"];
  "env-sphere1--phiStart"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--phiLength"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--detail"?: ParamValueSerializedTypeMap["integer"];
  "env-sphere1--center"?: ParamValueSerializedTypeMap["vector3"];
  "env-sphere1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--centerx"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--centery"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--centerz"?: ParamValueSerializedTypeMap["float"];
  "env-sphere1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "env-material2--group"?: ParamValueSerializedTypeMap["string"];
  "env-material2--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "env-material2--material"?: ParamValueSerializedTypeMap["node_path"];
  "env-material2--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "env-material2--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "env-material2--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "env-material2--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "env-material2--texDest0"?: ParamValueSerializedTypeMap["string"];
  "env-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "env-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "env-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "env-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "env-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "env-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "env-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "env-transform1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "env-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "env-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "env-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "env-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "env-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "env-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "env-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-sky1--turbidity"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-sky1--rayleigh"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-sky1--mieCoefficient"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-sky1--mieDirectional"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-sky1--inclination"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-sky1--azimuth"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-sky1--up"?: ParamValueSerializedTypeMap["vector3"];
  "env-MAT-sky1--up-upx"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-sky1--up-upy"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-sky1--up-upz"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-sky1--upx"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-sky1--upy"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-sky1--upz"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--default"?: ParamValueSerializedTypeMap["folder"];
  "env-MAT-meshStandardBuilder1--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--opacity"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--textures"?: ParamValueSerializedTypeMap["folder"];
  "env-MAT-meshStandardBuilder1--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--map"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshStandardBuilder1--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshStandardBuilder1--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshStandardBuilder1--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshStandardBuilder1--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshStandardBuilder1--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--emissive"?: ParamValueSerializedTypeMap["color"];
  "env-MAT-meshStandardBuilder1--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--emissiver"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshStandardBuilder1--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshStandardBuilder1--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshStandardBuilder1--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshStandardBuilder1--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "env-MAT-meshStandardBuilder1--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "env-MAT-meshStandardBuilder1--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshStandardBuilder1--metalness"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshStandardBuilder1--roughness"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--advanced"?: ParamValueSerializedTypeMap["folder"];
  "env-MAT-meshStandardBuilder1--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "env-MAT-meshStandardBuilder1--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--front"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--blending"?: ParamValueSerializedTypeMap["integer"];
  "env-MAT-meshStandardBuilder1--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "env-MAT-meshStandardBuilder1--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "env-MAT-meshStandardBuilder1--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--shadowPCSS"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--shadowPCSSFilterSize"?: ParamValueSerializedTypeMap["float"];
  "env-MAT-meshStandardBuilder1--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "env-MAT-meshStandardBuilder1--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
}
